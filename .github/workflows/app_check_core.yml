name: app_check

on:
  pull_request:
    paths:
    - 'AppCheckCore**'
    - '.github/workflows/app_check_core.yml'
    - 'Gemfile*'
  schedule:
    # Run every day at 11pm (PST) - cron uses UTC times
    - cron:  '0 7 * * *'

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
  diagnostics:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    runs-on: macos-12
    strategy:
      matrix:
        diagnostic: [tsan, asan, ubsan]
    steps:
    - uses: actions/checkout@v3
    - uses: mikehardy/buildcache-action@c87cea0ccd718971d6cc39e672c4f26815b6c126
      with:
        cache_key: ${{ matrix.os }}
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - name: iOS Unit Tests
      run: scripts/third_party/travis/retry.sh ./scripts/build.sh AppCheckCoreUnit iOS spm ${{ matrix.diagnostic }}
    - name: Upload raw logs if failed
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: failure-xcodebuild-raw-logs
        path: xcodebuild.log

  spm:
    # Don't run on private repo unless it is a PR.
    if: (github.repository == 'Firebase/firebase-ios-sdk' && github.event_name == 'schedule') || github.event_name == 'pull_request'
    runs-on: macos-12
    strategy:
      matrix:
        target: [iOS, tvOS, macOS, catalyst, watchOS]
    steps:
    - uses: actions/checkout@v3
    - uses: mikehardy/buildcache-action@c87cea0ccd718971d6cc39e672c4f26815b6c126
      with:
        cache_key: ${{ matrix.os }}
    - name: Initialize xcodebuild
      run: scripts/setup_spm_tests.sh
    - name: Unit Tests
      run: scripts/third_party/travis/retry.sh ./scripts/build.sh AppCheckCoreUnit ${{ matrix.target }} spm
    - name: Swift Unit Tests
      run: scripts/third_party/travis/retry.sh ./scripts/build.sh AppCheckCoreUnitSwift ${{ matrix.target }} spm
